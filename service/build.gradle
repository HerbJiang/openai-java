apply plugin: 'java-library'
apply plugin: 'maven-publish'
//apply plugin: "com.vanniktech.maven.publish"

archivesBaseName='openai-service'

dependencies {
    api project(":client")
    api libs.retrofit
    implementation libs.retrofitRxJava2
    implementation libs.retrofitJackson
    implementation libs.jacksonJsonSchema

    testImplementation(platform(libs.junitBom))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation libs.retrofitMock
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

test {
    useJUnitPlatform()
}

def getRepositoryUsername() {
    return hasProperty('MAVEN_REPO_USERNAME') ? MAVEN_REPO_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('MAVEN_REPO_PASSWORD') ? MAVEN_REPO_PASSWORD : ""
}

publishing {
	publications {
		maven(MavenPublication) {
			version = '0.12.0'
			groupId = 'com.intumit.openai'
			artifactId = 'openai-service'
			from components.java
		}
	}
	repositories {
		maven {
			allowInsecureProtocol true
			def releasesRepoUrl = 'http://git.intumit.com:5997/repository/maven-releases/'
			def snapshotsRepoUrl = 'http://git.intumit.com:5997/repository/maven-snapshots/'

			url = releasesRepoUrl
			credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
			}
		}
	}
}

task copyDependencies(type: Copy) {
	from configurations.runtimeClasspath
	into "$buildDir/libs/dependencies"
	include "*.jar"
}

build.dependsOn copyDependencies